<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!---加载jdbc配置文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>

    <!--数据库配置-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
          depends-on="sysProps">
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>

        <!--c3p0连接池的私有属性-->
        <property name="maxPoolSize" value="${maxPoolSize}"/>
        <property name="minPoolSize" value="${minPoolSize}"/>
        <property name="autoCommitOnClose" value="${autoCommitOnClose}"/>


        <property name="maxIdleTime" value="20"/>
        <property name="acquireIncrement" value="5"/>

        <!--获取超时时间-->
        <property name="checkoutTimeout" value="${timeout}"/>
        <!--连接重试次数-->
        <property name="acquireRetryAttempts" value="${try}"/>

    </bean>

    <!-- 将jdbc连接池托管到spring里-->
    <bean id="sysProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="setProperty"/>
        <property name="arguments">
            <list>
                <value>com.mchange.v2.c3p0.management.ManagementCoordinator</value>
                <value>com.mchange.v2.c3p0.management.NullManagementCoordinator</value>
            </list>
        </property>
    </bean>
    <!--获取mybatis的SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置文件位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--mapper映射文件位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--实体类的位置 使用实体类的别名省略包名-->
        <property name="typeAliasesPackage" value="com.dream.work.entity"/>
    </bean>
    <!--设置dao接口包的位置，让dao由spring进行注入和管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描dao包-->
        <property name="basePackage" value="com.dream.work.dao"/>
    </bean>

</beans>